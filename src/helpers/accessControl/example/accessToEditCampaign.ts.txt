// IAccessToEditCampaign contains all possible permission check methods for the Campaign create/edit page.
//
// Don't use the interface as it is! It is presented in this way as an example to show all possible permissions. 
// It violates many best practise principles of development like SRP, ISP etc.
//
// Please try to segregate this interface into small interfaces as many as possible to use each of them in its relevant component.

interface IAccessToEditCampaign {
  // Format
  canUseBannerFormat(): Promise<boolean>; // relevant for the presence of all banner formats (<width>x<height>) in the select control on the Settings block
  canUseBanner305x99Format(): Promise<boolean>; // relevant for the presence of the banner 305x99 format in the select control on the Settings block
  canUseBannerIframeFormat(): Promise<boolean>; // relevant for the presence of the IFrame option on the Creatives block while the selected format is a banner
  canUseBannerRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is a banner
  canUseBannerVideoFormat(): Promise<boolean>; // relevant for the presence of the Video option on the Creatives block while the selected format is a banner
  canUseInterstitialFormat(): Promise<boolean>; // relevant for the presence of the interstitial format in the select control on the Settings block
  canUseInterstitialRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the interstitial
  canUseNativeFormat(): Promise<boolean>; // relevant for the presence of the native format in the select control on the Settings block
  canUseNativeDynamicFormat(): Promise<boolean>; // relevant for the presence of the Dynamic option on the Creatives block while the selected format is the native
  canUseNativeRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the native
  canUsePopunderFormat(): Promise<boolean>; // relevant for the presence of the popunder format in the select control on the Settings block
  canUsePopunderRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the popunder
  canUsePushFormat(): Promise<boolean>; // relevant for the presence of the push format in the select control on the Settings block
  canUsePushDynamicFormat(): Promise<boolean>; // relevant for the presence of the Dynamic option on the Creatives block while the selected format is the push
  canUsePushRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the push
  canUseTabsFormat(): Promise<boolean>; // relevant for the presence of the tabs format in the select control on the Settings block
  canUseTabsRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the tabs
  canUseVideoFormat(): Promise<boolean>; // relevant for the presence of the video format in the select control on the Settings block
  canUseVideoRTBFormat(): Promise<boolean>; // relevant for the presence of the RTB option on the Creatives block while the selected format is the video
  canUseVideoVASTFeedFormat(): Promise<boolean>; // relevant for the presence of the VastFeed option on the Creatives block while the selected format is the video

  // Targeting
  canUseRegionTargeting(): Promise<boolean>; // relevant for the possibilty to set up regions in the country targeting on the Targeting block
  canUseBrowserVersionTargeting(): Promise<boolean>; // relevant for the possibilty to set up browser versions in the browser custom targeting on the Targeting block
  canUseOSVersionTargeting(): Promise<boolean>; // relevant for the possibilty to set up os versions in the os custom targeting on the Targeting block
  canUseDeviceModelTargeting(): Promise<boolean>; // relevant for the possibilty to set up device model, brand, release date and price on the Targeting block
  canUseProxyTrafficType(): Promise<boolean>; // relevant for the presence of proxy traffic type options on the Advanced Targeting block
  canUseKeywords(): Promise<boolean>; // relevant for the presence of keyword select on the Advanced Targeting block

  // Special
  canUseSpecialSettings(): Promise<boolean>; // relevant for the presence special settings block on the Settings tab

  // Price
  canUseCPMPricingModel(): Promise<boolean>; // relevant for the presence of the CPM option on the Price block
  canUseDynamicCPMPricingModel(): Promise<boolean>; // relevant for the presence of the Dynamic option on the Price block while the selected price model is a CPM
  canUseCPCPricingModel(): Promise<boolean>; // relevant for the presence of the CPC option on the Price block
  canUseCPAPricingModel(): Promise<boolean>; // relevant for the presence of the CPA option on the Price block
  canUseCPMVPricingModel(): Promise<boolean>; // relevant for the presence of the CPMV option on the Price block
  canUseRecommendedBid(): Promise<boolean>; // relevant for the presence of the recommended block view on the Price block
  canUseRTBInventoryPrice(): Promise<boolean>; // ?relevant for the presence of the RTB setting price block view on the Price block

  // Audience
  canUsePrimeTraffic(): Promise<boolean>; // relevant for the presence of the prime option on the Audience block
  canUseMembersAreaTraffic(): Promise<boolean>; // relevant for the presence of the members area option on the Audience block
  canUseTrafficSource(): Promise<boolean>; // relevant for the presence of traffic source options on the Audience block
  canUseSubIDLists(): Promise<boolean>; // ?relevant for the presence of the subid white/black list block on the Audience block
}